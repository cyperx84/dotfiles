#!/usr/bin/env bash

# Sesh preview script - minimal eza-based previews
# Integrated with session_helper.sh for tmux session info

# Color definitions
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

SESSION_INPUT="$1"

# Strip ANSI color codes and leading/trailing whitespace
SESSION_CLEAN=$(echo "$SESSION_INPUT" | sed 's/\x1b\[[0-9;]*m//g' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')

# Remove common sesh icons/prefixes (◆, ▣, 📁, etc.)
SESSION_CLEAN=$(echo "$SESSION_CLEAN" | sed 's/^[◆▣📁📂🔷🔶⬢●◉○] *//')

# Expand tilde to home directory
SESSION_CLEAN="${SESSION_CLEAN/#\~/$HOME}"

# Debug output (uncomment to troubleshoot)
# echo "DEBUG: Original input: [$SESSION_INPUT]" >&2
# echo "DEBUG: Cleaned: [$SESSION_CLEAN]" >&2

# Detect session type and clean up name
if [[ "$SESSION_CLEAN" =~ ^tmuxinator: ]]; then
    SESSION_TYPE="tmuxinator"
    SESSION_NAME="${SESSION_CLEAN#tmuxinator:}"
elif tmux has-session -t "$SESSION_CLEAN" 2>/dev/null; then
    SESSION_TYPE="tmux"
    SESSION_NAME="$SESSION_CLEAN"
elif [ -f "$HOME/.config/tmuxinator/${SESSION_CLEAN}.yml" ]; then
    SESSION_TYPE="tmuxinator"
    SESSION_NAME="$SESSION_CLEAN"
else
    SESSION_TYPE="directory"
    SESSION_NAME="$SESSION_CLEAN"
fi

# Preview based on type
case "$SESSION_TYPE" in
    "tmux")
        # Active tmux session - show session info
        echo -e "${BLUE}● Tmux Session: ${SESSION_NAME}${NC}"

        # Get window and pane counts
        WINDOW_COUNT=$(tmux list-windows -t "$SESSION_NAME" 2>/dev/null | wc -l | tr -d ' ')
        PANE_COUNT=$(tmux list-panes -s -t "$SESSION_NAME" 2>/dev/null | wc -l | tr -d ' ')

        echo -e "${CYAN}Windows:${NC} $WINDOW_COUNT  ${CYAN}Panes:${NC} $PANE_COUNT"
        echo ""

        # List windows with current markers
        echo -e "${CYAN}Windows:${NC}"
        tmux list-windows -t "$SESSION_NAME" -F "  #{?window_active,►,  } #{window_index}: #{window_name} (#{window_panes} panes)" 2>/dev/null
        echo ""

        # Show current path
        CURRENT_PATH=$(tmux display-message -p -t "$SESSION_NAME" '#{pane_current_path}' 2>/dev/null)
        echo -e "${CYAN}Current Path:${NC} $CURRENT_PATH"

        # If eza available, show directory contents
        if command -v eza &> /dev/null && [ -n "$CURRENT_PATH" ] && [ -d "$CURRENT_PATH" ]; then
            echo ""
            echo -e "${CYAN}Directory Contents:${NC}"
            eza --all --git --icons --color=always --group-directories-first "$CURRENT_PATH" 2>/dev/null || ls -la "$CURRENT_PATH" 2>/dev/null
        fi
        ;;

    "tmuxinator")
        # Tmuxinator project - show YAML config
        CONFIG_FILE="$HOME/.config/tmuxinator/${SESSION_NAME}.yml"

        if [ -f "$CONFIG_FILE" ]; then
            echo -e "${MAGENTA}◆ Tmuxinator Project: ${SESSION_NAME}${NC}"
            echo -e "${CYAN}Config:${NC} $CONFIG_FILE"
            echo ""

            # Parse and display YAML structure
            echo -e "${CYAN}Configuration:${NC}"
            grep -E "^(name|root|startup_window|on_project_start):" "$CONFIG_FILE" 2>/dev/null | sed 's/^/  /'

            echo ""
            echo -e "${CYAN}Windows:${NC}"
            grep -E "^  - [a-zA-Z]" "$CONFIG_FILE" 2>/dev/null | sed 's/^  - /  ► /' | head -10

            # Check if session is running
            echo ""
            if tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
                echo -e "${GREEN}✓ Currently running${NC}"
            else
                echo -e "${YELLOW}○ Not running${NC}"
            fi

            # Show root directory if it exists
            ROOT_DIR=$(grep "^root:" "$CONFIG_FILE" 2>/dev/null | sed 's/root: *//' | sed "s|~|$HOME|")
            if [ -n "$ROOT_DIR" ] && [ -d "$ROOT_DIR" ]; then
                echo ""
                echo -e "${CYAN}Project Root:${NC} $ROOT_DIR"
                if command -v eza &> /dev/null; then
                    echo ""
                    eza --all --git --icons --tree --level=1 --color=always "$ROOT_DIR" 2>/dev/null
                fi
            fi
        else
            echo -e "${MAGENTA}◆ Tmuxinator: ${SESSION_NAME}${NC}"
            echo -e "${YELLOW}⚠ Config file not found${NC}"
        fi
        ;;

    "directory")
        # Zoxide directory or path - show directory listing with eza
        if [ -d "$SESSION_NAME" ]; then
            echo -e "${YELLOW}📁 Directory: ${SESSION_NAME}${NC}"
            echo ""

            # Check for git repository
            if [ -d "$SESSION_NAME/.git" ]; then
                echo -e "${CYAN}Git Repository${NC}"
                cd "$SESSION_NAME" 2>/dev/null && git branch --show-current 2>/dev/null | sed 's/^/  Branch: /'
                echo ""
            fi

            # Show directory contents with eza
            if command -v eza &> /dev/null; then
                eza --all --git --icons --tree --level=2 --color=always --group-directories-first "$SESSION_NAME" 2>/dev/null
            else
                # Fallback to ls if eza not available
                ls -lah --color=always "$SESSION_NAME" 2>/dev/null | head -20
            fi
        else
            # Not a directory, might be a session name or pattern
            echo -e "${YELLOW}Session: ${SESSION_NAME}${NC}"
            echo ""
            echo "No preview available for this session type"
        fi
        ;;
esac
